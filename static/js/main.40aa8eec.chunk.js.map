{"version":3,"sources":["components/Visualizers/PathFinding/Header/Header.module.scss","components/Visualizers/Sorting/Header/Header.module.scss","components/AlgoVisualizer/AlgoVisualizer.module.scss","components/AlgoVisualizer/AlgoVisualizer.js","components/Visualizers/PathFinding/Node/Node.js","assets/information.svg","components/Visualizers/PathFinding/Header/Header.js","algorithms/pathfinding/dijkstra.js","algorithms/pathfinding/astar.js","components/Visualizers/PathFinding/PathFinding.js","assets/github.svg","components/Visualizers/Sorting/Header/Header.js","algorithms/sorting/utils/swap.js","algorithms/sorting/quickSort.js","algorithms/sorting/mergeSort.js","components/Visualizers/Sorting/Sorting.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AlgoVisualizer","props","className","styles","container","heading","items","item","to","card","Node","col","row","isFinish","isStart","isWall","onMouseDown","onMouseEnter","onMouseUp","onMouseLeave","extraClassName","id","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","SvgInformation","_ref","svgRef","title","titleId","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","Header","useState","algorithm","setAlgorithm","handleDropDownItemClicked","value","visualizerInfoElement","info__box","info__boxGrid","info__boxGrid__row","info__boxGrid__rowNode","info__boxGrid__rowNodeStart","info__boxGrid__rowNodeEnd","info__boxGrid__rowNodeWall","info__boxGrid__rowNodeVisited","info__boxGrid__rowNodeShortest","header","name","info","width","info__svg","controls","features","dropdown","btn","btn__dropdown","dropdownContent","onClick","clearGrid","clearWalls","btn__visualize","visualize","dijkstra","grid","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","node","push","getAllNodes","sortNodesByDistance","closestNode","shift","Infinity","isVisited","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","AStar","sortByDistance","distanceToFinishNode","START_ROW","START_COL","END_ROW","END_COL","PathfindingVisualizer","createNode","Math","abs","initialGrid","currentRow","getInitialGrid","changeGrid","mouseIsPressed","changeMousePressed","startPressed","changeStartPressed","finishPressed","changeFinishPressed","isRunning","toggleIsRunning","getNewGridWithWallToggled","newNode","newGrid","slice","getNewGridWithTerminalNodeChange","terminal","animateShortestPath","nodesInShortestPathOrder","a","setTimeout","document","getElementById","animateAlgorithm","gridElement","map","rowIdx","nodeIdx","handleMouseDown","handleMouseEnter","handleMouseLeave","algo","currentNode","unshift","getNodesInShortestPathOrder","visualizeAlgorithm","setSpeed","handleSpeedChange","speed","changeSpeed","rangeContainer","rangeInput","type","min","max","onChange","e","changeArrayLen","resetArray","swap","arr","index1","index2","temp","getQuickSortAnimations","copy","animations","quickSortHelper","left","right","part","j","pivot","partition","getMergeSortAnimations","len","mergeSortHelper","Array","aux","mid","floor","k","merge","SORTED_COLOUR","Sorting","arrLen","setArrLen","delay","setDelay","bars","setBars","setRunning","setFinished","visualizerRef","useRef","useEffect","animateArrayUpdate","forEach","index","comparison","swapped","prevArr","newValue","newArr","animateArrayAccess","arrayBars","current","children","arrayBarStyle","backgroundColor","animateSortedArray","random","sortBars","height","App","path","exact","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.40aa8eec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__28EP5\",\"info\":\"Header_info__1OL7H\",\"info__box\":\"Header_info__box__1Mpb3\",\"info__svg\":\"Header_info__svg__mfOeU\",\"info__box__sourceInfo\":\"Header_info__box__sourceInfo__1B5lQ\",\"info__boxGrid\":\"Header_info__boxGrid__2sy0U\",\"info__boxGrid__row\":\"Header_info__boxGrid__row__2Ldik\",\"info__boxGrid__rowNode\":\"Header_info__boxGrid__rowNode__3alRx\",\"info__boxGrid__rowNodeStart\":\"Header_info__boxGrid__rowNodeStart__aib7z\",\"info__boxGrid__rowNodeEnd\":\"Header_info__boxGrid__rowNodeEnd__YLqQd\",\"info__boxGrid__rowNodeWall\":\"Header_info__boxGrid__rowNodeWall__1dW9T\",\"info__boxGrid__rowNodeVisited\":\"Header_info__boxGrid__rowNodeVisited__2Cde6\",\"info__boxGrid__rowNodeShortest\":\"Header_info__boxGrid__rowNodeShortest__1VTsu\",\"name\":\"Header_name__1t1VD\",\"controls\":\"Header_controls__3CsrY\",\"features\":\"Header_features__1Huid\",\"btn\":\"Header_btn__3HNzq\",\"btn__visualize\":\"Header_btn__visualize__1hAo5\",\"dropdown\":\"Header_dropdown__MrT6t\",\"dropdownContent\":\"Header_dropdownContent__3WxKC\",\"btn__dropdown\":\"Header_btn__dropdown__1Sywa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__a4zUj\",\"name\":\"Header_name__11_xb\",\"controls\":\"Header_controls__3hX9z\",\"btn\":\"Header_btn__3R0Wu\",\"btn__visualize\":\"Header_btn__visualize__1H2MZ\",\"dropdown\":\"Header_dropdown__8_m81\",\"dropdownContent\":\"Header_dropdownContent__3mky9\",\"btn__dropdown\":\"Header_btn__dropdown__3vyio\",\"speedContainer\":\"Header_speedContainer__lYdrg\",\"rangeContainer\":\"Header_rangeContainer__6MJ6z\",\"rangeInput\":\"Header_rangeInput__2DQPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AlgoVisualizer_container__3lGum\",\"items\":\"AlgoVisualizer_items__1sM8p\",\"item\":\"AlgoVisualizer_item__3XbgD\",\"card\":\"AlgoVisualizer_card__2vrOe\"};","import { Link } from 'react-router-dom';\nimport styles from './AlgoVisualizer.module.scss';\n\nconst AlgoVisualizer = (props) => {\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.heading}>Algo Visualizer</h1>\n      <ul className={styles.items}>\n        <li className={styles.item}>\n          <Link to='/pathfinding'>\n            <div className={styles.card}>PathFinding Visualize</div>\n          </Link>\n        </li>\n        <li className={styles.item}>\n          <Link to='/sorting'>\n            <div className={styles.card}>Sorting Visualizer</div>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AlgoVisualizer;\n","import './Node.scss';\n\nconst Node = (props) => {\n  const {\n    col,\n    row,\n    isFinish,\n    isStart,\n    isWall,\n    onMouseDown,\n    onMouseEnter,\n    onMouseUp,\n    onMouseLeave,\n  } = props;\n\n  const extraClassName = isFinish\n    ? 'node-finish'\n    : isStart\n    ? 'node-start'\n    : isWall\n    ? 'node-wall'\n    : '';\n\n  return (\n    <div\n      id={`node-${row}-${col}`}\n      className={`node ${extraClassName}`}\n      onMouseDown={() => onMouseDown(row, col)}\n      onMouseEnter={() => onMouseEnter(row, col)}\n      onMouseUp={() => onMouseUp()}\n      onMouseLeave={() => onMouseLeave(row, col)}\n    ></div>\n  );\n};\n\nexport default Node;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M61.44,9.23c-1.85,0-3.64,0.08-5.35,0.25c-1.71,0.17-3.44,0.42-5.17,0.77c-1.72,0.34-3.39,0.77-5,1.26 c-1.59,0.49-3.16,1.07-4.7,1.72l-0.1,0.05l0,0c-1.63,0.7-3.18,1.45-4.67,2.25c-1.5,0.81-2.94,1.68-4.31,2.6 c-1.38,0.93-2.72,1.92-3.99,2.97c-1.27,1.05-2.5,2.16-3.68,3.35l-0.04,0.04c-1.18,1.18-2.29,2.4-3.33,3.66 c-1.05,1.28-2.04,2.61-2.97,3.99c-0.92,1.36-1.78,2.8-2.59,4.3c-0.8,1.49-1.56,3.05-2.26,4.67l-0.05,0.11l0,0l-0.07,0.14 c-0.63,1.5-1.19,3.04-1.67,4.61c-0.49,1.59-0.9,3.23-1.24,4.93c-0.35,1.73-0.6,3.45-0.77,5.17c-0.17,1.72-0.25,3.5-0.25,5.35 c0,1.85,0.08,3.64,0.25,5.35c0.17,1.71,0.42,3.44,0.77,5.17c0.35,1.72,0.77,3.39,1.27,5c0.49,1.57,1.05,3.13,1.7,4.66 c0.04,0.07,0.07,0.14,0.1,0.21c0.69,1.6,1.43,3.13,2.23,4.6c0.81,1.5,1.68,2.94,2.59,4.3c0.93,1.39,1.92,2.72,2.98,4 c1.02,1.24,2.11,2.44,3.26,3.59c0.07,0.06,0.13,0.12,0.19,0.19c1.16,1.16,2.36,2.24,3.59,3.26c1.28,1.05,2.61,2.04,3.99,2.97 c1.36,0.92,2.8,1.78,4.3,2.59c1.49,0.8,3.05,1.56,4.67,2.26l0.21,0.1c1.52,0.64,3.07,1.2,4.67,1.69c1.58,0.49,3.23,0.9,4.92,1.24 c1.73,0.35,3.45,0.6,5.17,0.77c1.72,0.17,3.5,0.25,5.35,0.25c1.85,0,3.64-0.08,5.35-0.25c1.71-0.17,3.44-0.42,5.17-0.77 c1.72-0.35,3.39-0.77,5-1.27c1.59-0.49,3.16-1.07,4.71-1.73l0.09-0.04l0-0.01c1.63-0.7,3.18-1.45,4.67-2.25 c1.5-0.81,2.94-1.68,4.31-2.6c1.38-0.93,2.72-1.92,3.99-2.97c1.25-1.03,2.45-2.12,3.62-3.29c0.06-0.06,0.11-0.12,0.18-0.18 c1.15-1.15,2.23-2.35,3.25-3.58c1.05-1.28,2.05-2.61,2.98-4c0.92-1.36,1.78-2.8,2.59-4.3c0.8-1.49,1.56-3.04,2.26-4.67l0.1-0.22 c0.64-1.51,1.2-3.06,1.69-4.65c0.49-1.59,0.9-3.23,1.24-4.93c0.35-1.73,0.6-3.45,0.77-5.17c0.17-1.72,0.25-3.5,0.25-5.35 c0-1.85-0.08-3.64-0.25-5.35c-0.17-1.71-0.42-3.44-0.77-5.17c-0.35-1.72-0.77-3.39-1.27-5c-0.49-1.59-1.07-3.16-1.73-4.71 l-0.04-0.09l0,0c-0.7-1.63-1.45-3.18-2.25-4.67c-0.81-1.5-1.68-2.94-2.59-4.3c-0.93-1.38-1.92-2.72-2.97-3.99 c-1.02-1.24-2.12-2.45-3.28-3.61c-0.07-0.06-0.13-0.12-0.18-0.18c-1.16-1.16-2.35-2.24-3.59-3.26c-1.28-1.05-2.61-2.04-3.99-2.97 c-1.37-0.92-2.8-1.78-4.3-2.59c-1.49-0.8-3.04-1.56-4.67-2.25l-0.19-0.09c-1.52-0.64-3.08-1.21-4.68-1.7 c-1.58-0.49-3.23-0.9-4.93-1.24c-1.73-0.35-3.45-0.6-5.17-0.77C65.08,9.31,63.29,9.23,61.44,9.23L61.44,9.23z M63.34,31.17 c2.19,0,3.91,0.63,5.16,1.88c1.24,1.25,1.87,2.96,1.87,5.17c0,2.24-1.07,4.22-3.21,5.97c-2.16,1.74-4.66,2.62-7.52,2.62 c-2.14,0-3.85-0.6-5.16-1.8c-1.31-1.22-1.96-2.79-1.96-4.75c0-2.47,1.07-4.59,3.19-6.4C57.82,32.06,60.37,31.17,63.34,31.17 L63.34,31.17L63.34,31.17z M75.55,91.71H47.33v-4.75h5.3V57.95h-5.3v-3.78h13.19c3.33,0,6.61-0.4,9.85-1.22v34.01h5.18L75.55,91.71 L75.55,91.71L75.55,91.71z M49.12,1.2c1.96-0.39,3.99-0.69,6.08-0.89C57.29,0.1,59.37,0,61.44,0c2.07,0,4.15,0.1,6.24,0.31 c2.09,0.2,4.12,0.5,6.08,0.89c1.94,0.39,3.88,0.88,5.82,1.48c1.88,0.58,3.74,1.26,5.58,2.04l0.19,0.07l0,0l0.06,0.02 c1.85,0.8,3.65,1.67,5.38,2.61c1.71,0.93,3.4,1.95,5.07,3.07c1.63,1.1,3.21,2.27,4.73,3.52c1.52,1.25,2.97,2.56,4.34,3.95 c1.38,1.38,2.7,2.83,3.95,4.34c1.25,1.52,2.42,3.09,3.52,4.73c1.09,1.63,2.11,3.32,3.06,5.06l0,0l0.01,0 c0.94,1.74,1.82,3.54,2.61,5.39c0.02,0.05,0.04,0.1,0.06,0.15c0.78,1.83,1.46,3.7,2.05,5.6c0.61,1.96,1.11,3.92,1.5,5.89 c0.39,1.96,0.69,3.99,0.89,6.08c0.2,2.09,0.3,4.17,0.3,6.24c0,2.07-0.1,4.15-0.31,6.24c-0.2,2.09-0.5,4.12-0.89,6.08 c-0.39,1.94-0.88,3.88-1.48,5.82c-0.58,1.89-1.27,3.76-2.05,5.62l-0.04,0.09l0,0l-0.05,0.11c-0.8,1.85-1.67,3.65-2.61,5.38 c-0.93,1.71-1.95,3.4-3.07,5.07c-1.1,1.63-2.27,3.21-3.52,4.73c-1.25,1.52-2.56,2.96-3.95,4.34c-1.38,1.38-2.83,2.7-4.35,3.95 c-1.52,1.25-3.09,2.42-4.72,3.51c-1.63,1.09-3.32,2.11-5.06,3.06c-1.78,0.96-3.57,1.84-5.39,2.62c-0.05,0.02-0.1,0.04-0.16,0.06 c-1.83,0.78-3.7,1.46-5.6,2.05c-1.96,0.61-3.92,1.11-5.88,1.5c-1.96,0.39-3.99,0.69-6.08,0.89c-2.09,0.2-4.17,0.3-6.24,0.3 s-4.15-0.1-6.24-0.3c-2.09-0.2-4.12-0.5-6.08-0.89c-1.94-0.39-3.88-0.88-5.82-1.48c-1.89-0.58-3.76-1.27-5.61-2.05l-0.2-0.08l0,0 c-1.85-0.8-3.65-1.67-5.38-2.61c-1.71-0.93-3.4-1.95-5.07-3.07c-1.63-1.09-3.21-2.27-4.72-3.51c-1.52-1.25-2.97-2.57-4.35-3.95 c-1.38-1.38-2.7-2.83-3.95-4.34c-1.25-1.52-2.42-3.1-3.52-4.73c-1.09-1.63-2.11-3.32-3.06-5.06c-0.97-1.78-1.84-3.58-2.62-5.4 c-0.02-0.05-0.04-0.1-0.06-0.15c-0.78-1.83-1.46-3.7-2.05-5.6c-0.61-1.96-1.11-3.93-1.5-5.89c-0.39-1.96-0.69-3.99-0.89-6.08 C0.1,65.59,0,63.51,0,61.44c0-2.07,0.1-4.15,0.31-6.24c0.2-2.09,0.5-4.12,0.89-6.08c0.39-1.94,0.88-3.88,1.48-5.82 c0.58-1.88,1.26-3.74,2.04-5.59l0.09-0.23l0,0c0.8-1.85,1.67-3.65,2.61-5.38c0.93-1.71,1.95-3.4,3.07-5.07 c1.1-1.63,2.27-3.21,3.52-4.73c1.25-1.52,2.56-2.96,3.95-4.34c1.38-1.38,2.83-2.7,4.34-3.95c1.52-1.25,3.09-2.42,4.73-3.52 c1.67-1.12,3.36-2.14,5.07-3.07l0.13-0.06c1.73-0.94,3.48-1.78,5.26-2.55c0.05-0.02,0.1-0.04,0.15-0.06 c1.83-0.78,3.7-1.46,5.6-2.05C45.19,2.09,47.15,1.59,49.12,1.2L49.12,1.2z\"\n}));\n\nfunction SvgInformation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 122.88 122.88\",\n    style: {\n      enableBackground: \"new 0 0 122.88 122.88\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgInformation);\nexport default __webpack_public_path__ + \"static/media/information.6137846e.svg\";\nexport { ForwardRef as ReactComponent };","import styles from './Header.module.scss';\n\nimport React, { useState } from 'react';\n\nimport { ReactComponent as InfoSvg } from '../../../../assets/information.svg';\n// import { ReactComponent as GithubSvg } from '../../../../assets/github.svg';\n\nconst Header = (props) => {\n  const [algorithm, setAlgorithm] = useState(null);\n\n  const handleDropDownItemClicked = (value) => {\n    setAlgorithm(value);\n  };\n\n  const handleVisualize = () => {\n    if (algorithm) props.visualize(algorithm);\n  };\n\n  const handleClearGrid = () => {\n    props.clearGrid();\n  };\n\n  const handleClearWalls = () => {\n    props.clearWalls();\n  };\n\n  const visualizerInfoElement = (\n    <div className={styles.info__box}>\n      <h3>\n        Welcome to the <br /> PathFinding Visualizer\n      </h3>\n      <div className={styles.info__boxGrid}>\n        <div className={styles.info__boxGrid__row}>\n          <span>Start Node</span>\n          <div\n            className={`${styles.info__boxGrid__rowNode} \n            ${styles.info__boxGrid__rowNodeStart} `}\n          ></div>\n        </div>\n\n        <div className={styles.info__boxGrid__row}>\n          <span>End Node</span>\n          <div\n            className={`${styles.info__boxGrid__rowNode} \n            ${styles.info__boxGrid__rowNodeEnd} `}\n          ></div>\n        </div>\n\n        <div className={styles.info__boxGrid__row}>\n          <span>Wall</span>\n          <div\n            className={`${styles.info__boxGrid__rowNode} \n            ${styles.info__boxGrid__rowNodeWall} `}\n          ></div>\n        </div>\n\n        <div className={styles.info__boxGrid__row}>\n          <span>Visited Node</span>\n          <div\n            className={`${styles.info__boxGrid__rowNode} \n            ${styles.info__boxGrid__rowNodeVisited} `}\n          ></div>\n        </div>\n\n        <div className={styles.info__boxGrid__row}>\n          <span>Shortest Path Node</span>\n          <div\n            className={`${styles.info__boxGrid__rowNode} \n            ${styles.info__boxGrid__rowNodeShortest} `}\n          ></div>\n        </div>\n      </div>\n      {/* <div className={styles.info__box__sourceInfo}>\n        View the source code\n        <a\n          href='https://github.com/shucoll/pathfinding-visualizer'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          {' '}\n          here <GithubSvg width='15px' />\n        </a>\n      </div> */}\n    </div>\n  );\n\n  return (\n    <header className={styles.header}>\n      <div className={styles.name}>PathFinding Visualizer</div>\n      <div className={styles.info}>\n        <InfoSvg width='30px' className={styles.info__svg} />\n        {visualizerInfoElement}\n      </div>\n      <div className={styles.controls}>\n        <div className={styles.features}>\n          <div className={styles.dropdown}>\n            <button className={`${styles.btn} ${styles.btn__dropdown}`}>\n              Choose Algorithm\n            </button>\n            <div className={styles.dropdownContent}>\n              <button\n                className={`${styles.btn}`}\n                onClick={() => handleDropDownItemClicked('Dijkstra')}\n              >\n                Dijkstra\n              </button>\n              <button\n                className={`${styles.btn}`}\n                onClick={() => handleDropDownItemClicked('AStar')}\n              >\n                AStar\n              </button>\n            </div>\n          </div>\n          <button className={`${styles.btn}`} onClick={handleClearGrid}>\n            Clear Grid\n          </button>\n\n          <button className={`${styles.btn}`} onClick={handleClearWalls}>\n            Clear Walls\n          </button>\n        </div>\n\n        <button\n          className={`${styles.btn} ${styles.btn__visualize}`}\n          onClick={handleVisualize}\n        >\n          Visualize {algorithm}\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","// Performs Dijkstra's algorithm; returns *all* nodes in the orderin which they were visited. Also makes nodes point back to their previous node, effectively allowing us to compute the shortest path by backtracking from the finish node.\n\n//At first all the nodes are at a distance of infinity. First we set the distance of our start node as 0. Then we sort the array of nodes and choose the node with shortest distance(ie, start node). Set that node as visited. Add that node to our visited nodes array. Finally update the neighbors of that node to have a distance of 0 so that one of them is picked in the next iteration.\nexport function dijkstra(grid, startNode, finishNode) {\n  const visitedNodesInOrder = [];\n  startNode.distance = 0;\n  const unvisitedNodes = getAllNodes(grid);\n  while (unvisitedNodes.length) {\n    sortNodesByDistance(unvisitedNodes);\n    const closestNode = unvisitedNodes.shift();\n\n    // If we encounter a wall, we skip it.\n    if (closestNode.isWall) continue;\n\n    // If the closest node is at a distance of infinity,\n    // we must be trapped and should therefore stop.\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\n    closestNode.isVisited = true;\n    visitedNodesInOrder.push(closestNode);\n    if (closestNode === finishNode) return visitedNodesInOrder;\n    updateUnvisitedNeighbors(closestNode, grid);\n  }\n}\n\nfunction sortNodesByDistance(unvisitedNodes) {\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction updateUnvisitedNeighbors(node, grid) {\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n  for (const neighbor of unvisitedNeighbors) {\n    neighbor.distance = node.distance + 1;\n    neighbor.previousNode = node;\n  }\n}\n\nfunction getUnvisitedNeighbors(node, grid) {\n  const neighbors = [];\n  const { col, row } = node;\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors.filter((neighbor) => !neighbor.isVisited);\n}\n\nfunction getAllNodes(grid) {\n  const nodes = [];\n  for (const row of grid) {\n    for (const node of row) {\n      nodes.push(node);\n    }\n  }\n  return nodes;\n}\n","export function AStar(grid, startNode, finishNode) {\n  const visitedNodesInOrder = [];\n  startNode.distance = 0;\n  const unvisitedNodes = getAllNodes(grid);\n\n  while (unvisitedNodes.length) {\n    sortByDistance(unvisitedNodes);\n    const closestNode = unvisitedNodes.shift();\n\n    if (closestNode.isWall) continue;\n\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\n    closestNode.isVisited = true;\n    visitedNodesInOrder.push(closestNode);\n    if (closestNode === finishNode) return visitedNodesInOrder;\n    updateUnvisitedNeighbors(closestNode, grid);\n  }\n}\n\nfunction sortByDistance(unvisitedNodes) {\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction updateUnvisitedNeighbors(node, grid) {\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n  for (const neighbor of unvisitedNeighbors) {\n    neighbor.distance = node.distance + 1 + neighbor.distanceToFinishNode;\n    neighbor.previousNode = node;\n  }\n}\n\nfunction getUnvisitedNeighbors(node, grid) {\n  const neighbors = [];\n  const { col, row } = node;\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors.filter((neighbor) => !neighbor.isVisited);\n}\n\nfunction getAllNodes(grid) {\n  const nodes = [];\n  for (const row of grid) {\n    for (const node of row) {\n      nodes.push(node);\n    }\n  }\n  return nodes;\n}\n","import { useState } from 'react';\n\nimport './PathFinding.scss';\n\nimport Node from './Node/Node';\nimport Header from './Header/Header';\n\nimport { dijkstra } from '../../../algorithms/pathfinding/dijkstra';\nimport { AStar } from '../../../algorithms/pathfinding/astar';\n\nlet START_ROW = 10;\nlet START_COL = 15;\nlet END_ROW = 10;\nlet END_COL = 35;\n\nconst PathfindingVisualizer = (props) => {\n  const ROW_COUNT = 20;\n  const COLUMN_COUNT = 50;\n\n  const createNode = (col, row) => {\n    return {\n      col,\n      row,\n      isStart: row === START_ROW && col === START_COL,\n      isFinish: row === END_ROW && col === END_COL,\n      distance: Infinity,\n      distanceToFinishNode: Math.abs(END_ROW - row) + Math.abs(END_COL - col),\n      isVisited: false,\n      isWall: false,\n      previousNode: null,\n    };\n  };\n\n  const getInitialGrid = () => {\n    const initialGrid = [];\n    for (let row = 0; row < ROW_COUNT; row++) {\n      const currentRow = [];\n      for (let col = 0; col < COLUMN_COUNT; col++) {\n        currentRow.push(createNode(col, row));\n      }\n      initialGrid.push(currentRow);\n    }\n    return initialGrid;\n  };\n\n  const [grid, changeGrid] = useState(getInitialGrid());\n  const [mouseIsPressed, changeMousePressed] = useState(false);\n  const [startPressed, changeStartPressed] = useState(false);\n  const [finishPressed, changeFinishPressed] = useState(false);\n  const [isRunning, toggleIsRunning] = useState(false);\n\n  const getNewGridWithWallToggled = (row, col) => {\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n\n    let newNode;\n\n    if (!node.isFinish && !node.isStart)\n      newNode = {\n        ...node,\n        isWall: !node.isWall,\n      };\n    else\n      newNode = {\n        ...node,\n      };\n\n    newGrid[row][col] = newNode;\n\n    return newGrid;\n  };\n\n  const getNewGridWithTerminalNodeChange = (row, col, terminal) => {\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    let newNode;\n    if (terminal === 'start') {\n      newNode = {\n        ...node,\n        isStart: !node.isStart,\n      };\n      START_ROW = row;\n      START_COL = col;\n    } else {\n      newNode = {\n        ...node,\n        isFinish: !node.isFinish,\n      };\n      END_ROW = row;\n      END_COL = col;\n    }\n    newGrid[row][col] = newNode;\n\n    return newGrid;\n  };\n\n  //onMouseDown = just pressing the mouse button\n  //onMouseUp = releasing the mouse button\n  //onMouseEnter = hovering over an element with mouse pressed\n\n  const handleMouseDown = (row, col) => {\n    if (row === START_ROW && col === START_COL) {\n      changeStartPressed(true);\n    } else if (row === END_ROW && col === END_COL) {\n      changeFinishPressed(true);\n    } else {\n      const newGrid = getNewGridWithWallToggled(row, col);\n      changeGrid(newGrid);\n    }\n    changeMousePressed(true);\n  };\n\n  const handleMouseEnter = (row, col) => {\n    if (!mouseIsPressed) return;\n    else if (startPressed) {\n      const newGrid = getNewGridWithTerminalNodeChange(row, col, 'start');\n      changeGrid(newGrid);\n    } else if (finishPressed) {\n      const newGrid = getNewGridWithTerminalNodeChange(row, col, 'finish');\n      changeGrid(newGrid);\n    } else {\n      const newGrid = getNewGridWithWallToggled(row, col);\n      changeGrid(newGrid);\n    }\n  };\n\n  const handleMouseLeave = (row, col) => {\n    if (startPressed) {\n      const newGrid = getNewGridWithTerminalNodeChange(row, col, 'start');\n      changeGrid(newGrid);\n    } else if (finishPressed) {\n      const newGrid = getNewGridWithTerminalNodeChange(row, col, 'finish');\n      changeGrid(newGrid);\n    }\n  };\n\n  const handleMouseUp = () => {\n    changeStartPressed(false);\n    changeFinishPressed(false);\n    changeMousePressed(false);\n  };\n\n  const animateShortestPath = async (nodesInShortestPathOrder) => {\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n      setTimeout(() => {\n        const node = nodesInShortestPathOrder[i];\n        if (\n          !(\n            nodesInShortestPathOrder[i].isFinish &&\n            !nodesInShortestPathOrder[i].previousNode\n          )\n        )\n          document.getElementById(`node-${node.row}-${node.col}`).className =\n            'node node-shortest-path';\n      }, 50 * i);\n\n      if (nodesInShortestPathOrder[i].isFinish) {\n        setTimeout(() => {\n          toggleIsRunning(false);\n        }, i * 60);\n      }\n    }\n  };\n\n  const animateAlgorithm = async (\n    visitedNodesInOrder,\n    nodesInShortestPathOrder\n  ) => {\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n      if (i === visitedNodesInOrder.length) {\n        setTimeout(() => {\n          animateShortestPath(nodesInShortestPathOrder);\n        }, 10 * i);\n        return;\n      }\n      setTimeout(() => {\n        const node = visitedNodesInOrder[i];\n        document.getElementById(`node-${node.row}-${node.col}`).className =\n          'node node-visited';\n      }, 10 * i);\n    }\n  };\n\n  const getNodesInShortestPathOrder = (finishNode) => {\n    const nodesInShortestPathOrder = [];\n    let currentNode = finishNode;\n    while (currentNode !== null) {\n      nodesInShortestPathOrder.unshift(currentNode);\n      currentNode = currentNode.previousNode;\n    }\n    return nodesInShortestPathOrder;\n  };\n\n  const visualizeAlgorithm = (algorithm) => {\n    if (!isRunning) {\n      toggleIsRunning(true);\n      const startNode = grid[START_ROW][START_COL];\n      const finishNode = grid[END_ROW][END_COL];\n\n      let visitedNodesInOrder;\n\n      switch (algorithm) {\n        case 'Dijkstra':\n          visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n          break;\n\n        case 'AStar':\n          visitedNodesInOrder = AStar(grid, startNode, finishNode);\n          break;\n\n        default:\n      }\n\n      const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\n      animateAlgorithm(visitedNodesInOrder, nodesInShortestPathOrder);\n    }\n  };\n\n  const clearGrid = () => {\n    if (!isRunning) {\n      const newGrid = grid.slice();\n      for (const row of newGrid) {\n        for (const node of row) {\n          node.distance = Infinity;\n          node.isVisited = false;\n          // node.isWall = false;\n          node.previousNode = null;\n          node.isStart = false;\n          node.isFinish = false;\n\n          if (!node.isWall)\n            document.getElementById(`node-${node.row}-${node.col}`).className =\n              'node';\n\n          START_ROW = 10;\n          START_COL = 15;\n          END_ROW = 10;\n          END_COL = 35;\n\n          if (node.row === START_ROW && node.col === START_COL) {\n            node.isStart = true;\n            document.getElementById(`node-${node.row}-${node.col}`).className =\n              'node node-start';\n          }\n          if (node.row === END_ROW && node.col === END_COL) {\n            node.isFinish = true;\n            document.getElementById(`node-${node.row}-${node.col}`).className =\n              'node node-finish';\n          }\n        }\n      }\n    }\n  };\n\n  const clearWalls = () => {\n    if (!isRunning) {\n      const newGrid = grid.slice();\n      for (const row of newGrid) {\n        for (const node of row) {\n          if (node.isWall) {\n            node.isWall = false;\n            document.getElementById(`node-${node.row}-${node.col}`).className =\n              'node';\n          }\n        }\n      }\n    }\n  };\n\n  const gridElement = (\n    <div className={'pathf__grid'}>\n      {grid.map((row, rowIdx) => {\n        return (\n          <div key={rowIdx}>\n            {row.map((node, nodeIdx) => {\n              const { row, col, isFinish, isStart, isWall } = node;\n              return (\n                <Node\n                  key={nodeIdx}\n                  col={col}\n                  row={row}\n                  isFinish={isFinish}\n                  isStart={isStart}\n                  isWall={isWall}\n                  onMouseDown={(row, col) => handleMouseDown(row, col)}\n                  onMouseEnter={(row, col) => handleMouseEnter(row, col)}\n                  onMouseLeave={() => handleMouseLeave(row, col)}\n                  onMouseUp={() => handleMouseUp()}\n                />\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n\n  return (\n    <div className=\"pathf__container\">\n      <Header\n        visualize={(algo) => visualizeAlgorithm(algo)}\n        clearGrid={clearGrid}\n        clearWalls={clearWalls}\n      />\n      <main className={'pathf__gridContainer'}>{gridElement}</main>\n    </div>\n  );\n};\n\nexport default PathfindingVisualizer;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n});\n\nfunction SvgGithub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    role: \"img\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"GitHub icon\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithub);\nexport default __webpack_public_path__ + \"static/media/github.16a9304e.svg\";\nexport { ForwardRef as ReactComponent };","import styles from './Header.module.scss';\n\nimport React, { useState } from 'react';\n\nimport { ReactComponent as GithubSvg } from '../../../../assets/github.svg';\n\nconst Header = (props) => {\n  const [algorithm, setAlgorithm] = useState(null);\n  const [speed, setSpeed] = useState('Normal');\n\n  const handleDropDownItemClicked = (value) => {\n    setAlgorithm(value);\n  };\n\n  const handleVisualize = () => {\n    if (algorithm) props.visualize(algorithm);\n  };\n\n  const handleSpeedChange = (speed) => {\n    setSpeed(speed);\n    props.changeSpeed(speed);\n  };\n\n  const handleResetArray = () => {\n    props.resetArray();\n  };\n\n  const handleRangeChange = (e) => {\n    props.changeArrayLen(e.target.value);\n  };\n\n  return (\n    <header className={styles.header}>\n      <div className={styles.name}>Sorting Visualizer</div>\n      <div className={styles.controls}>\n        <div className={styles.dropdown}>\n          <button className={`${styles.btn} ${styles.btn__dropdown}`}>\n            Choose Algorithm\n          </button>\n          <div className={styles.dropdownContent}>\n            <button\n              className={`${styles.btn}`}\n              onClick={() => handleDropDownItemClicked('MergeSort')}\n            >\n              Merge Sort\n            </button>\n            <button\n              className={`${styles.btn}`}\n              onClick={() => handleDropDownItemClicked('QuickSort')}\n            >\n              Quick Sort\n            </button>\n          </div>\n        </div>\n        <div className={styles.dropdown}>\n          <button className={`${styles.btn} ${styles.btn__dropdown}`}>\n            Speed\n          </button>\n          <div className={styles.dropdownContent}>\n            <button\n              className={`${styles.btn}`}\n              onClick={() => handleSpeedChange('Fast')}\n            >\n              Fast\n            </button>\n            <button\n              className={`${styles.btn}`}\n              onClick={() => handleSpeedChange('Normal')}\n            >\n              Normal\n            </button>\n            <button\n              className={`${styles.btn}`}\n              onClick={() => handleSpeedChange('Slow')}\n            >\n              Slow\n            </button>\n          </div>\n        </div>\n\n        <button\n          className={`${styles.btn} ${styles.btn__visualize}`}\n          onClick={handleVisualize}\n        >\n          Visualize {algorithm}\n        </button>\n\n        <div className={styles.rangeContainer}>\n          Array Size\n          <input\n            className={styles.rangeInput}\n            type='range'\n            min='5'\n            max='50'\n            onChange={handleRangeChange}\n          ></input>\n        </div>\n        <button className={`${styles.btn}`} onClick={handleResetArray}>\n          Reset Array\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","export function swap(arr, index1, index2) {\n  const temp = arr[index1];\n  arr[index1] = arr[index2];\n  arr[index2] = temp;\n}\n","import { swap } from './utils/swap';\n\nexport function getQuickSortAnimations(arr) {\n  const copy = [...arr];\n  const animations = [];\n  quickSortHelper(copy, 0, copy.length - 1, animations);\n  return animations;\n}\n\nfunction quickSortHelper(arr, left, right, animations) {\n  if (right <= left) return;\n  const part = partition(arr, left, right, animations);\n  quickSortHelper(arr, left, part, animations);\n  quickSortHelper(arr, part + 1, right, animations);\n}\n\nfunction partition(arr, left, right, animations) {\n  let i = left;\n  let j = right + 1;\n  const pivot = arr[left];\n  while (true) {\n    while (arr[++i] <= pivot) {\n      if (i === right) break;\n      animations.push([[i], false]);\n    }\n    while (arr[--j] >= pivot) {\n      if (j === left) break;\n      animations.push([[j], false]);\n    }\n    if (j <= i) break;\n    animations.push([[i, arr[j]], true]);\n    animations.push([[j, arr[i]], true]);\n    swap(arr, i, j);\n  }\n  animations.push([[left, arr[j]], true]);\n  animations.push([[j, arr[left]], true]);\n  swap(arr, left, j);\n  return j;\n}\n","export function getMergeSortAnimations(arr) {\n  const copy = [...arr];\n  const len = copy.length;\n  const aux = Array(len);\n  const animations = [];\n  mergeSortHelper(copy, aux, 0, len - 1, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(arr, aux, left, right, animations) {\n  if (right <= left) return;\n  const mid = left + Math.floor((right - left) / 2);\n  mergeSortHelper(arr, aux, left, mid, animations);\n  mergeSortHelper(arr, aux, mid + 1, right, animations);\n  merge(arr, aux, left, mid, right, animations);\n}\n\nfunction merge(arr, aux, left, mid, right, animations) {\n  for (let i = left; i <= right; i++) aux[i] = arr[i];\n  let i = left;\n  let j = mid + 1;\n  for (let k = left; k <= right; k++) {\n    if (i > mid) {\n      animations.push([[j], false]);\n      animations.push([[k, aux[j]], true]);\n      arr[k] = aux[j++];\n    } else if (j > right) {\n      animations.push([[i], false]);\n      animations.push([[k, aux[i]], true]);\n      arr[k] = aux[i++];\n    } else if (aux[j] < aux[i]) {\n      animations.push([[i, j], false]);\n      animations.push([[k, aux[j]], true]);\n      arr[k] = aux[j++];\n    } else {\n      animations.push([[i, j], false]);\n      animations.push([[k, aux[i]], true]);\n      arr[k] = aux[i++];\n    }\n  }\n}\n","import { useState, useRef, useEffect } from 'react';\nimport Header from './Header/Header';\nimport { getQuickSortAnimations } from '../../../algorithms/sorting/quickSort';\nimport { getMergeSortAnimations } from '../../../algorithms/sorting/mergeSort';\nimport './Sorting.scss';\n\nconst ACCESSED_COLOUR = 'red';\nconst SORTED_COLOUR = 'green';\nconst MIN_HEIGHT = 5;\nconst MAX_HEIGHT = 75;\n\nconst Sorting = (props) => {\n  const [arrLen, setArrLen] = useState(50);\n  const [delay, setDelay] = useState(15);\n  const [bars, setBars] = useState([]);\n  const [isRunning, setRunning] = useState(false);\n  const [isFinished, setFinished] = useState(false);\n\n  const visualizerRef = useRef(null);\n\n  useEffect(() => {\n    resetArray();\n  }, []);\n\n  useEffect(() => {\n    resetArray();\n  }, [arrLen]);\n\n  const visualizeAlgorithm = (algorithm) => {\n    if (!isRunning) {\n      setRunning(true);\n      let animations;\n\n      switch (algorithm) {\n        case 'MergeSort':\n          animations = getMergeSortAnimations(bars);\n          animateArrayUpdate(animations);\n          break;\n\n        case 'QuickSort':\n          animations = getQuickSortAnimations(bars);\n          animateArrayUpdate(animations);\n          break;\n\n        default:\n      }\n    }\n  };\n\n  function animateArrayUpdate(animations) {\n    if (isRunning) return;\n    setRunning(true);\n    animations.forEach(([comparison, swapped], index) => {\n      setTimeout(() => {\n        if (!swapped) {\n          if (comparison.length === 2) {\n            const [i, j] = comparison;\n            animateArrayAccess(i);\n            animateArrayAccess(j);\n          } else {\n            const [i] = comparison;\n            animateArrayAccess(i);\n          }\n        } else {\n          setBars((prevArr) => {\n            const [k, newValue] = comparison;\n            const newArr = [...prevArr];\n            newArr[k] = newValue;\n            return newArr;\n          });\n        }\n      }, index * delay);\n    });\n    setTimeout(() => {\n      animateSortedArray();\n    }, animations.length * delay);\n  }\n\n  function animateArrayAccess(index) {\n    const arrayBars = visualizerRef.current.children;\n    const arrayBarStyle = arrayBars[index].style;\n    setTimeout(() => {\n      arrayBarStyle.backgroundColor = ACCESSED_COLOUR;\n    }, delay);\n    setTimeout(() => {\n      arrayBarStyle.backgroundColor = '';\n    }, delay * 2);\n  }\n\n  function animateSortedArray() {\n    const arrayBars = visualizerRef.current.children;\n    for (let i = 0; i < arrayBars.length; i++) {\n      const arrayBarStyle = arrayBars[i].style;\n      setTimeout(\n        () => (arrayBarStyle.backgroundColor = SORTED_COLOUR),\n        i * delay\n      );\n    }\n    setTimeout(() => {\n      setFinished(true);\n      setRunning(false);\n    }, arrayBars.length * delay);\n  }\n\n  const randomFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const resetArray = () => {\n    if (!isRunning) {\n      const arr = [];\n      for (let i = 0; i < arrLen; i++) {\n        arr.push(randomFromInterval(MIN_HEIGHT, MAX_HEIGHT));\n      }\n      const arrayBars = visualizerRef.current.children;\n      for (let i = 0; i < bars.length; i++) {\n        const arrayBarStyle = arrayBars[i].style;\n        arrayBarStyle.backgroundColor = '';\n      }\n      setBars(arr);\n    }\n  };\n\n  const changeSpeed = (speed) => {\n    if (!isRunning) {\n      switch (speed) {\n        case 'Fast':\n          setDelay(5);\n          break;\n\n        case 'Normal':\n          setDelay(20);\n          break;\n\n        case 'Slow':\n          setDelay(100);\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const changeArrayLen = (value) => {\n    setArrLen(value);\n  };\n\n  const sortBars = bars.map((height, index) => (\n    <div\n      className='sort__arrayBar'\n      style={{\n        height: `${height}vmin`,\n        width: `${100 / arrLen}vw`,\n      }}\n      key={index}\n    ></div>\n  ));\n\n  return (\n    <div className='sort__container'>\n      <Header\n        visualize={(algo) => visualizeAlgorithm(algo)}\n        resetArray={resetArray}\n        changeArrayLen={changeArrayLen}\n        changeSpeed={changeSpeed}\n      />\n      <main className='sort__gridContainer' ref={visualizerRef}>\n        {sortBars}\n      </main>\n    </div>\n  );\n};\n\nexport default Sorting;\n","import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport AlgoVisualizer from './components/AlgoVisualizer/AlgoVisualizer';\nimport PathFindingVisualizer from './components/Visualizers/PathFinding/PathFinding';\nimport SortingVisualizer from './components/Visualizers/Sorting/Sorting';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path='/' exact element={<AlgoVisualizer/>} />\n        <Route path='/pathfinding' element={<PathFindingVisualizer/>} />\n        <Route path='/sorting' element={<SortingVisualizer/>} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}